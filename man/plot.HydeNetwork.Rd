% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/plot.HydeNetwork.R
\name{plot.HydeNetwork}
\alias{HydePlotOptions}
\alias{customNode}
\alias{plot.HydeNetwork}
\alias{plotHydeNetwork}
\title{Plotting Utilities Probabilistic Graphical Network}
\usage{
\method{plot}{HydeNetwork}(x, ..., useHydeDefaults = TRUE)

HydePlotOptions(variable = NULL, determ = NULL, decision = NULL,
  utility = NULL, restorePackageDefault = FALSE)

customNode(...)
}
\arguments{
\item{x}{an object of class \code{HydeNetwork}}

\item{...}{additional arguments to be passed to \code{graph::plot}.
This may also contain named elements customizing nodes, as in
\code{node = customNode(...)}.}

\item{useHydeDefaults}{A logical value indicating if the default plot
  parameters in \code{options("Hyde_plotOptions")} should be applied
  to the plot.}

\item{variable}{A named list of default parameters for standard variables.}

\item{determ}{A named list of default parameteres for deterministic nodes.}

\item{decision}{A named list of default parameters for decision nodes.}

\item{utility}{A named list of default parameters for utility nodes.}

\item{restorePackageDefault}{When \code{TRUE}, the initial package defaults
are restored.}
}
\description{
Plotting Utilities Probabilistic Graphical Network
}
\details{
Generate and customize plots the dag object of a \code{HydeNetwork}
  class network. \code{HydeNet} provides some initial defaults for standard
  variable nodes, deterministic nodes, decision nodes, and utility nodes.
  Since these nodes are assumed to be of inherent difference and interest,
  the options are defined in a way to make these easier to identify in
  a plot.  The default options may be altered by the user to their liking
  by invoking \code{HydePlotOptions}.  Node attributes are more fully
  explained in the documentation for \code{?GraphvizAttributes}.  Individual
  nodes may be customized with \code{customNode}
}
\note{
For customizations, see the \code{Rgraphviz} documentation for
  \code{GraphvizAttributes}.  Most notably, read the sections about
  General Node Attributes to manipulate shapes and positions of the
  nodes and their labels.  These are manipulated through the \code{nodeAttrs}
  arguments (passed through \code{...}).

  General Graph Attributes are passed through \code{attrs} and Edge
  Attributes are passed through \code{edgeAttrs}.
}
\examples{
carNet <- HydeNetwork( ~ cyl +
                      disp | cyl +
                      hp | disp +
                      wt +
                      gear +
                      mpg | disp*hp*wt*gear,
                      data=mtcars)
plot(carNet)

#* Change node colors, shapes, and labels.
#* See "Notes" for more details.
plot(carNet,
     nodeAttrs=list(fillcolor=list(cyl="green", am="blue"),
                    shape=list(am="rect", mpg="ellipse"),
                    label=list(cyl="Cylinder", disp="Displacement",
                               mpg="Miles per Gallon")))
}
\author{
Jarrod Dalton and Benjamin Nutter
}
\seealso{
GraphvizAttributes
}


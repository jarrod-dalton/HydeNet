{
    "contents" : "### 0.10.0 (26 Sept 2015)\n* Implements the `factorLevels` element in network objects \n  and arguments in `setNode`.  See Issue #81\n* Changes to `plot.HydeNetwork` relevant to changes in \n  `DiagrammeR` 0.8.0.  Note that the column names in custom node\n  data frames no longer contain `node_id` but use `nodes` \n  instead.  However, the `HydeNet` function arguments have no\n  changed names, in order to maintain compatibility with 0.9.0.\n  Future versions may allow for either `node_id` or `nodes` to \n  be used.  In custom edge data frames, `edge_from` and `edge_to`\n  are changed to `from` and `to`, respectively.\n\n### 0.9.3 (24 Sept 2015)\n* Minor bug fix related to creating policy matrices with nodes that\n  don't have a 'nodeFitter' specified.\n\n### 0.9.2 (11 Sept 2015)\n* Fixed a bug in `compileJagsModel` and `compileDecisionModel` that prevented `cpt`\n  objects from being passed to JAGS models correctly.\n* Added `nodeData` argument to `setNode`.\n* Added unit tests.\n\n### 0.9.1 (6 July 2015)\n* Conversion of argument checks to using the `ArgumentCheck` package\n* Connections are closed in `compileDecisionModel`.  This allows decision networks to be\n  compiled for absurdly large policy matrices (> 1000 policies)\n\n### 0.9.0 (2 July 2015)\n* Added imports from `utils` and `stats` to comply with new CRAN policies.\n* Adds the functionality to allow all `nodeType` specifications to properly build in\n  `writeJagsModel`. (See Issue #72)\n* Incremented to version 0.9.0 for CRAN release.\n\n### 0.8.11 (26 June 2015)\n* Fixed a bug preventing `cpt` arrays from being passed to `jags.model` in \n  `compileDecisionModel`\n* Fixed a bug preventing bernoulli values from being passed to `cpt` arrays in the JAGS models.\n\n### 0.8.10 (19 June 2015)\n* Streamlined the generation of the `factorRef` element of the compiled Hyde Networks.  \n  This also allows all data frames in all nodes to be included to generate a complete list \n  of factors throughout the network (previously, it only generated references for factors \n  in the overall `data` element, not the `nodeData` elements.\n\n### 0.8.9 (16 June 2015)\n* Incorporated minor changes for compatibility with DiagrammeR 0.7\n* Minor bug fix to `mergeCustomNodes` to prevent loss of custom settings\n* Minor changes to `HydeNetPlots` vignette\n* Minor changes to `GettingStartedWithHydeNet` vignette.\n* Removed `ObtainingPosteriorDistributions` vignette.\n* Added `VignetteBuilder` option to the description file.  For now, when reinstalling the\n  package, use the command `devtools::install_local([directory])`.  If you try to build the \n  vignettes with the package, a strange error occurs that prevents the installation.  This \n  error is related to the `WorkingWithHydeNetObjects` vignette, but I can't reproduce the \n  error outside of the build command.\n\n### 0.8.8 (5 June 2015)\n* `setNodeModel` and `writeJagsFormula` methods are complete.\n* `writeJagsModel` now accommodates `cpt` objects\n* `compileJagsNetwork` retrieves `cpt` objects to include in the \n  `data` argument, allowing JAGS to compile without the user having to \n  remember to assign the `cpt` object to the data.\n\n### 0.8.7 (29 May 2015)\n* `cpt` function is added to assist in developing multidimensional conditional\n  probability tables. `cpt` and `cptInput` are generics with methods for `list`\n  and `formula`.  Their structure is undergoing some growing pains right now, \n  so expect more changes in the future.\n* Improvements to `setNode` validation.\n* Improvements to efficiency of `compileDecisionModel`.\n* Consolidated all data documentation into a single file.\n* `HydeNetwork` chooses `cpt` as the fitter for variables where the node is\n  a factor and all parents are factors.\n* Added `modelToNode.cpt`.  This is untested as of yet and may be buggy.  Final\n  changes are pending the finalization of the `cpt` objects.\n\n### 0.8.6 (15 May 2015)\n* An additional function called `nodeFromFormula` is used to generate most likely\n  node names from terms in model formulas that are used in functions and other \n  transformations.  For instance, when a formula has `factor(x)`, only the `x` \n  is used in node names. (Solves Issue #31)\n* A new, unexported function called `matchVars` is used to reduce terms in \n  model formulas to just the node name. (Solves Issue #26) \n* An additional argument is used in `writeJagsModel` and `modelToNode` that is\n  required by an unexported function `matchVars`. \n* Changed behavior of `setNode` to retain current settings for decision and \n  utility nodes (Issue #53)\n* Added a message to indicate that character strings defining parameters\n  in `setNode` are not validated (Issue #24).\n* Updated `BlackJack` network object to be consistent with the object defined in \n  the Decision Nodes vignette.\n* Now Imports on `broom (>= 0.3.7)`.  This makes sure that the multinom tidiers\n  are available.\n\n### 0.8.5 (7 May 2015)\n* Moved `gRbase` from Depends: to Imports:\n* Repaired a bug in `plot.HydeNetwork` that prevented plotting without defaults\n* Updated the `HydeNetPlots` vignette to accommodate new plotting features.\n\n### 0.8.4 (3 May 2015)\n* Revamped plotting utilities to make use of the DiagrammeR package.  This makes\n  the full range of GraphViz available for use.\n\n### 0.8.3 (2 May 2015)\n* Implemented policy matrices into `compileDecisionModel` and fixed all the\n  bugs that popped up in doing so.\n* Changed the name of the Black Jack training data from `bjdata` to \n  `BlackJackTrain`.  Added documentation for it.\n* Completed Documentation.\n\n### 0.8.2 (1 May 2015)\n* Adds functionality to customize plot defaults.\n* Adds functionality to customize nodes in plots.\n* Added the `BlackJack` data object, which contains a `HydeNetwork` object\n  simulating a game of black jack.\n* Included a vignette showing off the use of plotting methods.\n\n### 0.8.1 (25 April 2015)\n* Fixes Issue #10 dealing with utility nodes not being properly initialized \n  and set.\n\n### 0.8.0 (24 April 2015)\n* Added a new dependency on package `dplyr` and `magrittr`.  This was done to\n  make `dplyr` available for joining MCMC matrices returned by `coda.samples`.\n* Modified `compileJagsModel` to accommodate compiling multiple JAGS models when\n  a policy/decision matrix is provided.\n* Added the function `HydePosterior`, which generates posterior distributions\n  of all of the JAGS models compiled by `HydePosterior`.\n* Added a print function for the output of `HydePosterior`\n* Added a function to bind all of the MCMC output from `HydePosterior` into\n  a single data frame.\n* Addressed a bug in `compileJagsModel` that affected observed data values. \n  (Issue #36 on GitHub).\n* Addressed a bug in `modelToNode` that printed the node name in the first \n  parameter, causing `compileJagsModel` to fail. (Issue #35 on GitHub).\n\n### 0.7.2 (10 April 2015)\n\n* The primary additions to this developmental change are the addition of \n  decision nodes.  Each node now has a new descriptor (found in \n  `network$nodeDecision`.  It is a logical value indicating if the node should\n  be considered a decision node.\n* The behavior of decision nodes is exactly like all other nodes in every \n  respect _until_ you call the `compileDecisionNetwork` function.  \n  `compileDecisionNetwork` evaluates all of the decision nodes, builds a table\n  of all combinations of decision options, and systematically runs\n  `compileJagsModel` for each row of that table to create a JAGS model for \n  each combination of decisions.\n* Decision nodes can be defined in `setNode`, but for convenience, a new \n  function is introduced (`setDecisionNodes`) to allow multiple nodes to be \n  defined as decision nodes in one call.  This is intended for use when a list\n  of models is used to define a network.\n* Various bugs have been corrected that were uncovered while testing conditional\n  logic nodes (this is not a formal feature of HydeNet, but can be done.  A \n  vignette describing their use will be built later)\n* Additional bugs have been corrected while uncovered during the testing of \n  decision node features.\n",
    "created" : 1444394843319.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4118078853",
    "id" : "49152ABD",
    "lastKnownWriteTime" : 1444395080,
    "path" : "~/GitHub/HydeNet/NEWS",
    "project_path" : "NEWS",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "text"
}
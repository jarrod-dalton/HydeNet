plot.HydeNetwork <- function(x, ..., useHydeDefaults=TRUE)
{
  node_df <- 
    data.frame(nodes = x$nodes,
               stringsAsFactors=FALSE)
  if (useHydeDefaults)
  { 
    node_df <- node_df %>%
      dplyr::mutate(node_type = ifelse(x$nodeType[nodes] == "determ", 
                                       "determ",
                                       ifelse(x$nodeDecision[nodes], 
                                              "decision",
                                              ifelse(x$nodeUtility[nodes], 
                                                     "utility",
                                                     "variable")))) %>%
      dplyr::left_join(., getOption("Hyde_plotOptions"),
                       by=c("node_type" = "type")) %>%
      dplyr::select_("-node_type")
  }
  
  mapEdges <- function(n, p) cbind(rep(n, length(p)),p)
  edge_table <- do.call("rbind", mapply(mapEdges, x$nodes, x$parents))

  
  edge_df <- DiagrammeR::create_edges(edge_from = edge_table[, 2], 
                                      edge_to = edge_table[, 1])

  DiagrammeR::graphviz_graph(nodes_df = node_df,
                             edges_df = edge_df) %>%
    graphviz_render
  
}

data(BlackJack, package="HydeNet")
plot(BlackJack)
